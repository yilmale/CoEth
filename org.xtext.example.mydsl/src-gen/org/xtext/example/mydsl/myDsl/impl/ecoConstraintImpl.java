/**
 * generated by Xtext 2.9.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.ecoConstraint;
import org.xtext.example.mydsl.myDsl.ecoNode;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>eco Constraint</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ecoConstraintImpl#getCooperativeUnits <em>Cooperative Units</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ecoConstraintImpl#getSource <em>Source</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ecoConstraintImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ecoConstraintImpl#getWeight <em>Weight</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ecoConstraintImpl extends MinimalEObjectImpl.Container implements ecoConstraint
{
  /**
   * The cached value of the '{@link #getCooperativeUnits() <em>Cooperative Units</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCooperativeUnits()
   * @generated
   * @ordered
   */
  protected EList<ecoNode> cooperativeUnits;

  /**
   * The cached value of the '{@link #getSource() <em>Source</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected ecoNode source;

  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected ecoNode target;

  /**
   * The default value of the '{@link #getWeight() <em>Weight</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeight()
   * @generated
   * @ordered
   */
  protected static final String WEIGHT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWeight() <em>Weight</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeight()
   * @generated
   * @ordered
   */
  protected String weight = WEIGHT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ecoConstraintImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.ECO_CONSTRAINT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ecoNode> getCooperativeUnits()
  {
    if (cooperativeUnits == null)
    {
      cooperativeUnits = new EObjectResolvingEList<ecoNode>(ecoNode.class, this, MyDslPackage.ECO_CONSTRAINT__COOPERATIVE_UNITS);
    }
    return cooperativeUnits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ecoNode getSource()
  {
    if (source != null && source.eIsProxy())
    {
      InternalEObject oldSource = (InternalEObject)source;
      source = (ecoNode)eResolveProxy(oldSource);
      if (source != oldSource)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.ECO_CONSTRAINT__SOURCE, oldSource, source));
      }
    }
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ecoNode basicGetSource()
  {
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSource(ecoNode newSource)
  {
    ecoNode oldSource = source;
    source = newSource;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ECO_CONSTRAINT__SOURCE, oldSource, source));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ecoNode getTarget()
  {
    if (target != null && target.eIsProxy())
    {
      InternalEObject oldTarget = (InternalEObject)target;
      target = (ecoNode)eResolveProxy(oldTarget);
      if (target != oldTarget)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.ECO_CONSTRAINT__TARGET, oldTarget, target));
      }
    }
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ecoNode basicGetTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTarget(ecoNode newTarget)
  {
    ecoNode oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ECO_CONSTRAINT__TARGET, oldTarget, target));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getWeight()
  {
    return weight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWeight(String newWeight)
  {
    String oldWeight = weight;
    weight = newWeight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ECO_CONSTRAINT__WEIGHT, oldWeight, weight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.ECO_CONSTRAINT__COOPERATIVE_UNITS:
        return getCooperativeUnits();
      case MyDslPackage.ECO_CONSTRAINT__SOURCE:
        if (resolve) return getSource();
        return basicGetSource();
      case MyDslPackage.ECO_CONSTRAINT__TARGET:
        if (resolve) return getTarget();
        return basicGetTarget();
      case MyDslPackage.ECO_CONSTRAINT__WEIGHT:
        return getWeight();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.ECO_CONSTRAINT__COOPERATIVE_UNITS:
        getCooperativeUnits().clear();
        getCooperativeUnits().addAll((Collection<? extends ecoNode>)newValue);
        return;
      case MyDslPackage.ECO_CONSTRAINT__SOURCE:
        setSource((ecoNode)newValue);
        return;
      case MyDslPackage.ECO_CONSTRAINT__TARGET:
        setTarget((ecoNode)newValue);
        return;
      case MyDslPackage.ECO_CONSTRAINT__WEIGHT:
        setWeight((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ECO_CONSTRAINT__COOPERATIVE_UNITS:
        getCooperativeUnits().clear();
        return;
      case MyDslPackage.ECO_CONSTRAINT__SOURCE:
        setSource((ecoNode)null);
        return;
      case MyDslPackage.ECO_CONSTRAINT__TARGET:
        setTarget((ecoNode)null);
        return;
      case MyDslPackage.ECO_CONSTRAINT__WEIGHT:
        setWeight(WEIGHT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ECO_CONSTRAINT__COOPERATIVE_UNITS:
        return cooperativeUnits != null && !cooperativeUnits.isEmpty();
      case MyDslPackage.ECO_CONSTRAINT__SOURCE:
        return source != null;
      case MyDslPackage.ECO_CONSTRAINT__TARGET:
        return target != null;
      case MyDslPackage.ECO_CONSTRAINT__WEIGHT:
        return WEIGHT_EDEFAULT == null ? weight != null : !WEIGHT_EDEFAULT.equals(weight);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (weight: ");
    result.append(weight);
    result.append(')');
    return result.toString();
  }

} //ecoConstraintImpl
