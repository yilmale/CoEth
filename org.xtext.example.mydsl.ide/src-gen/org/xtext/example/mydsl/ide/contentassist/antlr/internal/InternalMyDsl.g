/*
 * generated by Xtext 2.9.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleCoEthDSL
entryRuleCoEthDSL
:
{ before(grammarAccess.getCoEthDSLRule()); }
	 ruleCoEthDSL
{ after(grammarAccess.getCoEthDSLRule()); } 
	 EOF 
;

// Rule CoEthDSL
ruleCoEthDSL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoEthDSLAccess().getGroup()); }
		(rule__CoEthDSL__Group__0)
		{ after(grammarAccess.getCoEthDSLAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgent
entryRuleAgent
:
{ before(grammarAccess.getAgentRule()); }
	 ruleAgent
{ after(grammarAccess.getAgentRule()); } 
	 EOF 
;

// Rule Agent
ruleAgent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgentAccess().getGroup()); }
		(rule__Agent__Group__0)
		{ after(grammarAccess.getAgentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleecoNode
entryRuleecoNode
:
{ before(grammarAccess.getEcoNodeRule()); }
	 ruleecoNode
{ after(grammarAccess.getEcoNodeRule()); } 
	 EOF 
;

// Rule ecoNode
ruleecoNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEcoNodeAccess().getAlternatives()); }
		(rule__EcoNode__Alternatives)
		{ after(grammarAccess.getEcoNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleecoConstraint
entryRuleecoConstraint
:
{ before(grammarAccess.getEcoConstraintRule()); }
	 ruleecoConstraint
{ after(grammarAccess.getEcoConstraintRule()); } 
	 EOF 
;

// Rule ecoConstraint
ruleecoConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEcoConstraintAccess().getGroup()); }
		(rule__EcoConstraint__Group__0)
		{ after(grammarAccess.getEcoConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFacilitate
entryRuleFacilitate
:
{ before(grammarAccess.getFacilitateRule()); }
	 ruleFacilitate
{ after(grammarAccess.getFacilitateRule()); } 
	 EOF 
;

// Rule Facilitate
ruleFacilitate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFacilitateAccess().getGroup()); }
		(rule__Facilitate__Group__0)
		{ after(grammarAccess.getFacilitateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrigger
entryRuleTrigger
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup()); }
		(rule__Trigger__Group__0)
		{ after(grammarAccess.getTriggerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInhibit
entryRuleInhibit
:
{ before(grammarAccess.getInhibitRule()); }
	 ruleInhibit
{ after(grammarAccess.getInhibitRule()); } 
	 EOF 
;

// Rule Inhibit
ruleInhibit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInhibitAccess().getGroup()); }
		(rule__Inhibit__Group__0)
		{ after(grammarAccess.getInhibitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIncompatible
entryRuleIncompatible
:
{ before(grammarAccess.getIncompatibleRule()); }
	 ruleIncompatible
{ after(grammarAccess.getIncompatibleRule()); } 
	 EOF 
;

// Rule Incompatible
ruleIncompatible 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncompatibleAccess().getGroup()); }
		(rule__Incompatible__Group__0)
		{ after(grammarAccess.getIncompatibleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExplain
entryRuleExplain
:
{ before(grammarAccess.getExplainRule()); }
	 ruleExplain
{ after(grammarAccess.getExplainRule()); } 
	 EOF 
;

// Rule Explain
ruleExplain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExplainAccess().getGroup()); }
		(rule__Explain__Group__0)
		{ after(grammarAccess.getExplainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeduce
entryRuleDeduce
:
{ before(grammarAccess.getDeduceRule()); }
	 ruleDeduce
{ after(grammarAccess.getDeduceRule()); } 
	 EOF 
;

// Rule Deduce
ruleDeduce 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeduceAccess().getGroup()); }
		(rule__Deduce__Group__0)
		{ after(grammarAccess.getDeduceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContradict
entryRuleContradict
:
{ before(grammarAccess.getContradictRule()); }
	 ruleContradict
{ after(grammarAccess.getContradictRule()); } 
	 EOF 
;

// Rule Contradict
ruleContradict 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContradictAccess().getGroup()); }
		(rule__Contradict__Group__0)
		{ after(grammarAccess.getContradictAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimilar
entryRuleSimilar
:
{ before(grammarAccess.getSimilarRule()); }
	 ruleSimilar
{ after(grammarAccess.getSimilarRule()); } 
	 EOF 
;

// Rule Similar
ruleSimilar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimilarAccess().getGroup()); }
		(rule__Similar__Group__0)
		{ after(grammarAccess.getSimilarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompete
entryRuleCompete
:
{ before(grammarAccess.getCompeteRule()); }
	 ruleCompete
{ after(grammarAccess.getCompeteRule()); } 
	 EOF 
;

// Rule Compete
ruleCompete 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompeteAccess().getGroup()); }
		(rule__Compete__Group__0)
		{ after(grammarAccess.getCompeteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NodeType
ruleNodeType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeTypeAccess().getAlternatives()); }
		(rule__NodeType__Alternatives)
		{ after(grammarAccess.getNodeTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getGroup_0()); }
		(rule__EcoNode__Group_0__0)
		{ after(grammarAccess.getEcoNodeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEcoNodeAccess().getGroup_1()); }
		(rule__EcoNode__Group_1__0)
		{ after(grammarAccess.getEcoNodeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoConstraintAccess().getFacilitateParserRuleCall_0_0()); }
		ruleFacilitate
		{ after(grammarAccess.getEcoConstraintAccess().getFacilitateParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEcoConstraintAccess().getTriggerParserRuleCall_0_1()); }
		ruleTrigger
		{ after(grammarAccess.getEcoConstraintAccess().getTriggerParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEcoConstraintAccess().getInhibitParserRuleCall_0_2()); }
		ruleInhibit
		{ after(grammarAccess.getEcoConstraintAccess().getInhibitParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getEcoConstraintAccess().getIncompatibleParserRuleCall_0_3()); }
		ruleIncompatible
		{ after(grammarAccess.getEcoConstraintAccess().getIncompatibleParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getEcoConstraintAccess().getExplainParserRuleCall_0_4()); }
		ruleExplain
		{ after(grammarAccess.getEcoConstraintAccess().getExplainParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getEcoConstraintAccess().getDeduceParserRuleCall_0_5()); }
		ruleDeduce
		{ after(grammarAccess.getEcoConstraintAccess().getDeduceParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getEcoConstraintAccess().getContradictParserRuleCall_0_6()); }
		ruleContradict
		{ after(grammarAccess.getEcoConstraintAccess().getContradictParserRuleCall_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getEcoConstraintAccess().getSimilarParserRuleCall_0_7()); }
		ruleSimilar
		{ after(grammarAccess.getEcoConstraintAccess().getSimilarParserRuleCall_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getEcoConstraintAccess().getCompeteParserRuleCall_0_8()); }
		ruleCompete
		{ after(grammarAccess.getEcoConstraintAccess().getCompeteParserRuleCall_0_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeTypeAccess().getGOALEnumLiteralDeclaration_0()); }
		('goal')
		{ after(grammarAccess.getNodeTypeAccess().getGOALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getBELIEFEnumLiteralDeclaration_1()); }
		('belief')
		{ after(grammarAccess.getNodeTypeAccess().getBELIEFEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getEVIDENCEEnumLiteralDeclaration_2()); }
		('evidence')
		{ after(grammarAccess.getNodeTypeAccess().getEVIDENCEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getACTIONEnumLiteralDeclaration_3()); }
		('action')
		{ after(grammarAccess.getNodeTypeAccess().getACTIONEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoEthDSL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoEthDSL__Group__0__Impl
	rule__CoEthDSL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoEthDSL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoEthDSLAccess().getCoEthModelKeyword_0()); }
	'CoEth Model'
	{ after(grammarAccess.getCoEthDSLAccess().getCoEthModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoEthDSL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoEthDSL__Group__1__Impl
	rule__CoEthDSL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoEthDSL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoEthDSLAccess().getModelNameAssignment_1()); }
	(rule__CoEthDSL__ModelNameAssignment_1)
	{ after(grammarAccess.getCoEthDSLAccess().getModelNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoEthDSL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoEthDSL__Group__2__Impl
	rule__CoEthDSL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoEthDSL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoEthDSLAccess().getEntitiesAssignment_2()); }
	(rule__CoEthDSL__EntitiesAssignment_2)*
	{ after(grammarAccess.getCoEthDSLAccess().getEntitiesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoEthDSL__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoEthDSL__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoEthDSL__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoEthDSLAccess().getEndKeyword_3()); }
	'end'
	{ after(grammarAccess.getCoEthDSLAccess().getEndKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__0__Impl
	rule__Agent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getAgentKeyword_0()); }
	'agent'
	{ after(grammarAccess.getAgentAccess().getAgentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__1__Impl
	rule__Agent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getNameAssignment_1()); }
	(rule__Agent__NameAssignment_1)
	{ after(grammarAccess.getAgentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__2__Impl
	rule__Agent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__3__Impl
	rule__Agent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getFeaturesAssignment_3()); }
	(rule__Agent__FeaturesAssignment_3)*
	{ after(grammarAccess.getAgentAccess().getFeaturesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__4__Impl
	rule__Agent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getOperationsAssignment_4()); }
	(rule__Agent__OperationsAssignment_4)*
	{ after(grammarAccess.getAgentAccess().getOperationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__5__Impl
	rule__Agent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getEcoModelKeyword_5()); }
	'ecoModel'
	{ after(grammarAccess.getAgentAccess().getEcoModelKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__6__Impl
	rule__Agent__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__7__Impl
	rule__Agent__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAgentAccess().getDecoNodesAssignment_7()); }
		(rule__Agent__DecoNodesAssignment_7)
		{ after(grammarAccess.getAgentAccess().getDecoNodesAssignment_7()); }
	)
	(
		{ before(grammarAccess.getAgentAccess().getDecoNodesAssignment_7()); }
		(rule__Agent__DecoNodesAssignment_7)*
		{ after(grammarAccess.getAgentAccess().getDecoNodesAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__8__Impl
	rule__Agent__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getConstraintsKeyword_8()); }
	'constraints'
	{ after(grammarAccess.getAgentAccess().getConstraintsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__9__Impl
	rule__Agent__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_9()); }
	'{'
	{ after(grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__10__Impl
	rule__Agent__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAgentAccess().getConstraintsAssignment_10()); }
		(rule__Agent__ConstraintsAssignment_10)
		{ after(grammarAccess.getAgentAccess().getConstraintsAssignment_10()); }
	)
	(
		{ before(grammarAccess.getAgentAccess().getConstraintsAssignment_10()); }
		(rule__Agent__ConstraintsAssignment_10)*
		{ after(grammarAccess.getAgentAccess().getConstraintsAssignment_10()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__11__Impl
	rule__Agent__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__12__Impl
	rule__Agent__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_13()); }
	'}'
	{ after(grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EcoNode__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0__0__Impl
	rule__EcoNode__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getEcoNodeAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0__1__Impl
	rule__EcoNode__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getNTypeAssignment_0_1()); }
	(rule__EcoNode__NTypeAssignment_0_1)
	{ after(grammarAccess.getEcoNodeAccess().getNTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0__2__Impl
	rule__EcoNode__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getNameAssignment_0_2()); }
	(rule__EcoNode__NameAssignment_0_2)
	{ after(grammarAccess.getEcoNodeAccess().getNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0__3__Impl
	rule__EcoNode__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getNDefinitionAssignment_0_3()); }
	(rule__EcoNode__NDefinitionAssignment_0_3)
	{ after(grammarAccess.getEcoNodeAccess().getNDefinitionAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0__4__Impl
	rule__EcoNode__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getGroup_0_4()); }
	(rule__EcoNode__Group_0_4__0)?
	{ after(grammarAccess.getEcoNodeAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0__5__Impl
	rule__EcoNode__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getGroup_0_5()); }
	(rule__EcoNode__Group_0_5__0)?
	{ after(grammarAccess.getEcoNodeAccess().getGroup_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getRightParenthesisKeyword_0_6()); }
	')'
	{ after(grammarAccess.getEcoNodeAccess().getRightParenthesisKeyword_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EcoNode__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0_4__0__Impl
	rule__EcoNode__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getInitialActivationKeyword_0_4_0()); }
	'initial activation'
	{ after(grammarAccess.getEcoNodeAccess().getInitialActivationKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0_4__1__Impl
	rule__EcoNode__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getEqualsSignKeyword_0_4_1()); }
	'='
	{ after(grammarAccess.getEcoNodeAccess().getEqualsSignKeyword_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getActivationLevelAssignment_0_4_2()); }
	(rule__EcoNode__ActivationLevelAssignment_0_4_2)
	{ after(grammarAccess.getEcoNodeAccess().getActivationLevelAssignment_0_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EcoNode__Group_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0_5__0__Impl
	rule__EcoNode__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getPriorityKeyword_0_5_0()); }
	'priority'
	{ after(grammarAccess.getEcoNodeAccess().getPriorityKeyword_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0_5__1__Impl
	rule__EcoNode__Group_0_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getEqualsSignKeyword_0_5_1()); }
	'='
	{ after(grammarAccess.getEcoNodeAccess().getEqualsSignKeyword_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_0_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_0_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getPriorityAssignment_0_5_2()); }
	(rule__EcoNode__PriorityAssignment_0_5_2)
	{ after(grammarAccess.getEcoNodeAccess().getPriorityAssignment_0_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EcoNode__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_1__0__Impl
	rule__EcoNode__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getEcoNodeAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_1__1__Impl
	rule__EcoNode__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getNTypeAssignment_1_1()); }
	(rule__EcoNode__NTypeAssignment_1_1)
	{ after(grammarAccess.getEcoNodeAccess().getNTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_1__2__Impl
	rule__EcoNode__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getNameAssignment_1_2()); }
	(rule__EcoNode__NameAssignment_1_2)
	{ after(grammarAccess.getEcoNodeAccess().getNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_1__3__Impl
	rule__EcoNode__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getIsKeyword_1_3()); }
	'is'
	{ after(grammarAccess.getEcoNodeAccess().getIsKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_1__4__Impl
	rule__EcoNode__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getMyActionAssignment_1_4()); }
	(rule__EcoNode__MyActionAssignment_1_4)
	{ after(grammarAccess.getEcoNodeAccess().getMyActionAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_1__5__Impl
	rule__EcoNode__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getBDefinitionAssignment_1_5()); }
	(rule__EcoNode__BDefinitionAssignment_1_5)
	{ after(grammarAccess.getEcoNodeAccess().getBDefinitionAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoNode__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoNodeAccess().getRightParenthesisKeyword_1_6()); }
	')'
	{ after(grammarAccess.getEcoNodeAccess().getRightParenthesisKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionKeyword_0()); }
	'action'
	{ after(grammarAccess.getActionAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_1()); }
	(rule__Action__NameAssignment_1)
	{ after(grammarAccess.getActionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_3()); }
	(rule__Action__Group_3__0)
	{ after(grammarAccess.getActionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_3__0__Impl
	rule__Action__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDefinitionKeyword_3_0()); }
	'definition'
	{ after(grammarAccess.getActionAccess().getDefinitionKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getADefinitionAssignment_3_1()); }
	(rule__Action__ADefinitionAssignment_3_1)
	{ after(grammarAccess.getActionAccess().getADefinitionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EcoConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoConstraint__Group__0__Impl
	rule__EcoConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoConstraintAccess().getAlternatives_0()); }
	(rule__EcoConstraint__Alternatives_0)
	{ after(grammarAccess.getEcoConstraintAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoConstraint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoConstraintAccess().getGroup_1()); }
	(rule__EcoConstraint__Group_1__0)?
	{ after(grammarAccess.getEcoConstraintAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EcoConstraint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoConstraint__Group_1__0__Impl
	rule__EcoConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoConstraintAccess().getWithKeyword_1_0()); }
	'with'
	{ after(grammarAccess.getEcoConstraintAccess().getWithKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoConstraint__Group_1__1__Impl
	rule__EcoConstraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoConstraintAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getEcoConstraintAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoConstraint__Group_1__2__Impl
	rule__EcoConstraint__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEcoConstraintAccess().getCooperativeUnitsAssignment_1_2()); }
		(rule__EcoConstraint__CooperativeUnitsAssignment_1_2)
		{ after(grammarAccess.getEcoConstraintAccess().getCooperativeUnitsAssignment_1_2()); }
	)
	(
		{ before(grammarAccess.getEcoConstraintAccess().getCooperativeUnitsAssignment_1_2()); }
		(rule__EcoConstraint__CooperativeUnitsAssignment_1_2)*
		{ after(grammarAccess.getEcoConstraintAccess().getCooperativeUnitsAssignment_1_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EcoConstraint__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEcoConstraintAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getEcoConstraintAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Facilitate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facilitate__Group__0__Impl
	rule__Facilitate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacilitateAccess().getFacilitateKeyword_0()); }
	'facilitate'
	{ after(grammarAccess.getFacilitateAccess().getFacilitateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facilitate__Group__1__Impl
	rule__Facilitate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacilitateAccess().getSourceAssignment_1()); }
	(rule__Facilitate__SourceAssignment_1)
	{ after(grammarAccess.getFacilitateAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facilitate__Group__2__Impl
	rule__Facilitate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacilitateAccess().getTargetAssignment_2()); }
	(rule__Facilitate__TargetAssignment_2)
	{ after(grammarAccess.getFacilitateAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Facilitate__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFacilitateAccess().getWeightAssignment_3()); }
	(rule__Facilitate__WeightAssignment_3)?
	{ after(grammarAccess.getFacilitateAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__0__Impl
	rule__Trigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getTriggerKeyword_0()); }
	'trigger'
	{ after(grammarAccess.getTriggerAccess().getTriggerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__1__Impl
	rule__Trigger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getSourceAssignment_1()); }
	(rule__Trigger__SourceAssignment_1)
	{ after(grammarAccess.getTriggerAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__2__Impl
	rule__Trigger__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getTargetAssignment_2()); }
	(rule__Trigger__TargetAssignment_2)
	{ after(grammarAccess.getTriggerAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getWeightAssignment_3()); }
	(rule__Trigger__WeightAssignment_3)?
	{ after(grammarAccess.getTriggerAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inhibit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inhibit__Group__0__Impl
	rule__Inhibit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInhibitAccess().getInhibitKeyword_0()); }
	'inhibit'
	{ after(grammarAccess.getInhibitAccess().getInhibitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inhibit__Group__1__Impl
	rule__Inhibit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInhibitAccess().getSourceAssignment_1()); }
	(rule__Inhibit__SourceAssignment_1)
	{ after(grammarAccess.getInhibitAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inhibit__Group__2__Impl
	rule__Inhibit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInhibitAccess().getTargetAssignment_2()); }
	(rule__Inhibit__TargetAssignment_2)
	{ after(grammarAccess.getInhibitAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inhibit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInhibitAccess().getWeightAssignment_3()); }
	(rule__Inhibit__WeightAssignment_3)?
	{ after(grammarAccess.getInhibitAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Incompatible__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Incompatible__Group__0__Impl
	rule__Incompatible__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncompatibleAccess().getIncompatibleKeyword_0()); }
	'incompatible'
	{ after(grammarAccess.getIncompatibleAccess().getIncompatibleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Incompatible__Group__1__Impl
	rule__Incompatible__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncompatibleAccess().getSourceAssignment_1()); }
	(rule__Incompatible__SourceAssignment_1)
	{ after(grammarAccess.getIncompatibleAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Incompatible__Group__2__Impl
	rule__Incompatible__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncompatibleAccess().getTargetAssignment_2()); }
	(rule__Incompatible__TargetAssignment_2)
	{ after(grammarAccess.getIncompatibleAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Incompatible__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncompatibleAccess().getWeightAssignment_3()); }
	(rule__Incompatible__WeightAssignment_3)?
	{ after(grammarAccess.getIncompatibleAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Explain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Explain__Group__0__Impl
	rule__Explain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplainAccess().getExplainKeyword_0()); }
	'explain'
	{ after(grammarAccess.getExplainAccess().getExplainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Explain__Group__1__Impl
	rule__Explain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplainAccess().getSourceAssignment_1()); }
	(rule__Explain__SourceAssignment_1)
	{ after(grammarAccess.getExplainAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Explain__Group__2__Impl
	rule__Explain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplainAccess().getTargetAssignment_2()); }
	(rule__Explain__TargetAssignment_2)
	{ after(grammarAccess.getExplainAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Explain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplainAccess().getWeightAssignment_3()); }
	(rule__Explain__WeightAssignment_3)?
	{ after(grammarAccess.getExplainAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Deduce__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Deduce__Group__0__Impl
	rule__Deduce__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeduceAccess().getDeduceKeyword_0()); }
	'deduce'
	{ after(grammarAccess.getDeduceAccess().getDeduceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Deduce__Group__1__Impl
	rule__Deduce__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeduceAccess().getSourceAssignment_1()); }
	(rule__Deduce__SourceAssignment_1)
	{ after(grammarAccess.getDeduceAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Deduce__Group__2__Impl
	rule__Deduce__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeduceAccess().getTargetAssignment_2()); }
	(rule__Deduce__TargetAssignment_2)
	{ after(grammarAccess.getDeduceAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Deduce__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeduceAccess().getWeightAssignment_3()); }
	(rule__Deduce__WeightAssignment_3)?
	{ after(grammarAccess.getDeduceAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contradict__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contradict__Group__0__Impl
	rule__Contradict__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContradictAccess().getContradictKeyword_0()); }
	'contradict'
	{ after(grammarAccess.getContradictAccess().getContradictKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contradict__Group__1__Impl
	rule__Contradict__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContradictAccess().getSourceAssignment_1()); }
	(rule__Contradict__SourceAssignment_1)
	{ after(grammarAccess.getContradictAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contradict__Group__2__Impl
	rule__Contradict__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContradictAccess().getTargetAssignment_2()); }
	(rule__Contradict__TargetAssignment_2)
	{ after(grammarAccess.getContradictAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contradict__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContradictAccess().getWeightAssignment_3()); }
	(rule__Contradict__WeightAssignment_3)?
	{ after(grammarAccess.getContradictAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Similar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Similar__Group__0__Impl
	rule__Similar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimilarAccess().getSimilarKeyword_0()); }
	'similar'
	{ after(grammarAccess.getSimilarAccess().getSimilarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Similar__Group__1__Impl
	rule__Similar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimilarAccess().getSourceAssignment_1()); }
	(rule__Similar__SourceAssignment_1)
	{ after(grammarAccess.getSimilarAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Similar__Group__2__Impl
	rule__Similar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimilarAccess().getTargetAssignment_2()); }
	(rule__Similar__TargetAssignment_2)
	{ after(grammarAccess.getSimilarAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Similar__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimilarAccess().getWeightAssignment_3()); }
	(rule__Similar__WeightAssignment_3)?
	{ after(grammarAccess.getSimilarAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compete__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compete__Group__0__Impl
	rule__Compete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompeteAccess().getCompeteKeyword_0()); }
	'compete'
	{ after(grammarAccess.getCompeteAccess().getCompeteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compete__Group__1__Impl
	rule__Compete__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompeteAccess().getSourceAssignment_1()); }
	(rule__Compete__SourceAssignment_1)
	{ after(grammarAccess.getCompeteAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compete__Group__2__Impl
	rule__Compete__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompeteAccess().getTargetAssignment_2()); }
	(rule__Compete__TargetAssignment_2)
	{ after(grammarAccess.getCompeteAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compete__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompeteAccess().getWeightAssignment_3()); }
	(rule__Compete__WeightAssignment_3)?
	{ after(grammarAccess.getCompeteAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getNameAssignment_0()); }
	(rule__Feature__NameAssignment_0)
	{ after(grammarAccess.getFeatureAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFeatureAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getTypeAssignment_2()); }
	(rule__Feature__TypeAssignment_2)
	{ after(grammarAccess.getFeatureAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoEthDSL__ModelNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoEthDSLAccess().getModelNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCoEthDSLAccess().getModelNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoEthDSL__EntitiesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoEthDSLAccess().getEntitiesAgentParserRuleCall_2_0()); }
		ruleAgent
		{ after(grammarAccess.getCoEthDSLAccess().getEntitiesAgentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__FeaturesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentAccess().getFeaturesFeatureParserRuleCall_3_0()); }
		ruleFeature
		{ after(grammarAccess.getAgentAccess().getFeaturesFeatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__OperationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentAccess().getOperationsActionParserRuleCall_4_0()); }
		ruleAction
		{ after(grammarAccess.getAgentAccess().getOperationsActionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__DecoNodesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentAccess().getDecoNodesEcoNodeParserRuleCall_7_0()); }
		ruleecoNode
		{ after(grammarAccess.getAgentAccess().getDecoNodesEcoNodeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__ConstraintsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentAccess().getConstraintsEcoConstraintParserRuleCall_10_0()); }
		ruleecoConstraint
		{ after(grammarAccess.getAgentAccess().getConstraintsEcoConstraintParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__NTypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getNTypeNodeTypeEnumRuleCall_0_1_0()); }
		ruleNodeType
		{ after(grammarAccess.getEcoNodeAccess().getNTypeNodeTypeEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getNameIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEcoNodeAccess().getNameIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__NDefinitionAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getNDefinitionSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getEcoNodeAccess().getNDefinitionSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__ActivationLevelAssignment_0_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getActivationLevelDOUBLETerminalRuleCall_0_4_2_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getEcoNodeAccess().getActivationLevelDOUBLETerminalRuleCall_0_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__PriorityAssignment_0_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getPriorityINTTerminalRuleCall_0_5_2_0()); }
		RULE_INT
		{ after(grammarAccess.getEcoNodeAccess().getPriorityINTTerminalRuleCall_0_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__NTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getNTypeNodeTypeEnumRuleCall_1_1_0()); }
		ruleNodeType
		{ after(grammarAccess.getEcoNodeAccess().getNTypeNodeTypeEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getNameIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEcoNodeAccess().getNameIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__MyActionAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getMyActionActionCrossReference_1_4_0()); }
		(
			{ before(grammarAccess.getEcoNodeAccess().getMyActionActionIDTerminalRuleCall_1_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEcoNodeAccess().getMyActionActionIDTerminalRuleCall_1_4_0_1()); }
		)
		{ after(grammarAccess.getEcoNodeAccess().getMyActionActionCrossReference_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoNode__BDefinitionAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoNodeAccess().getBDefinitionSTRINGTerminalRuleCall_1_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getEcoNodeAccess().getBDefinitionSTRINGTerminalRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ADefinitionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getADefinitionSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getActionAccess().getADefinitionSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EcoConstraint__CooperativeUnitsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEcoConstraintAccess().getCooperativeUnitsEcoNodeCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getEcoConstraintAccess().getCooperativeUnitsEcoNodeIDTerminalRuleCall_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEcoConstraintAccess().getCooperativeUnitsEcoNodeIDTerminalRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getEcoConstraintAccess().getCooperativeUnitsEcoNodeCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacilitateAccess().getSourceEcoNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getFacilitateAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFacilitateAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getFacilitateAccess().getSourceEcoNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacilitateAccess().getTargetEcoNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getFacilitateAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFacilitateAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getFacilitateAccess().getTargetEcoNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Facilitate__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFacilitateAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getFacilitateAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getSourceEcoNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTriggerAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTriggerAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTriggerAccess().getSourceEcoNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getTargetEcoNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getTriggerAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTriggerAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getTriggerAccess().getTargetEcoNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getTriggerAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInhibitAccess().getSourceEcoNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getInhibitAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInhibitAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getInhibitAccess().getSourceEcoNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInhibitAccess().getTargetEcoNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getInhibitAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInhibitAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getInhibitAccess().getTargetEcoNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inhibit__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInhibitAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getInhibitAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncompatibleAccess().getSourceEcoNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getIncompatibleAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIncompatibleAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getIncompatibleAccess().getSourceEcoNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncompatibleAccess().getTargetEcoNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getIncompatibleAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIncompatibleAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getIncompatibleAccess().getTargetEcoNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Incompatible__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncompatibleAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getIncompatibleAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplainAccess().getSourceEcoNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExplainAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExplainAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExplainAccess().getSourceEcoNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplainAccess().getTargetEcoNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getExplainAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExplainAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getExplainAccess().getTargetEcoNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Explain__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplainAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getExplainAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeduceAccess().getSourceEcoNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDeduceAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeduceAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDeduceAccess().getSourceEcoNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeduceAccess().getTargetEcoNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDeduceAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeduceAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDeduceAccess().getTargetEcoNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Deduce__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeduceAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getDeduceAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContradictAccess().getSourceEcoNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getContradictAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getContradictAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getContradictAccess().getSourceEcoNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContradictAccess().getTargetEcoNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getContradictAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getContradictAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getContradictAccess().getTargetEcoNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contradict__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContradictAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getContradictAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimilarAccess().getSourceEcoNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSimilarAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSimilarAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSimilarAccess().getSourceEcoNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimilarAccess().getTargetEcoNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSimilarAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSimilarAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSimilarAccess().getTargetEcoNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Similar__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimilarAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getSimilarAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompeteAccess().getSourceEcoNodeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCompeteAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompeteAccess().getSourceEcoNodeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCompeteAccess().getSourceEcoNodeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompeteAccess().getTargetEcoNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getCompeteAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCompeteAccess().getTargetEcoNodeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getCompeteAccess().getTargetEcoNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compete__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompeteAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getCompeteAccess().getWeightDOUBLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getTypeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFeatureAccess().getTypeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
